// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  sector      String   // e.g., Technology, Healthcare, Finance
  industry    String   // e.g., Software, Medical Devices, Banking
  subIndustry String?  // e.g., SaaS, Digital Health, Investment Banking
  description String?
  logoUrl     String?
  websiteUrl  String?
  email       String?
  phone       String?
  street      String?
  suburb      String?
  state       String?
  postcode    String?
  country     String   @default("Australia")
  latitude    Float?   // For Google Maps
  longitude   Float?   // For Google Maps
  tags        Json?    @default("[]") // Array of strings
  status      String   @default("pending") // pending | published | archived
  views       Int      @default(0)
  
  // New fields for equity raising
  amountSeeking String? // e.g., "$1M - $5M", "Over $10M"
  raisingReason String? // e.g., "Expansion", "Working Capital", "Acquisition"
  properties   String?  // Description of company properties/assets
  
  // Photos
  photos      Json?    @default("[]") // Array of URL strings
  projectPhotos Json?  @default("[]") // Array of URL strings
  additionalSections Json? @default("[]") // Array of AdditionalSection objects
  
  // Advisor relationship
  advisorId   String?
  advisor     Advisor? @relation(fields: [advisorId], references: [id])
  
  // User tracking
  createdBy   String?  // Simple identifier for who created the listing
  
  // Listings relationship
  listings    Listing[]
  
  // Saved listings relationship
  savedBy     SavedListing[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("companies")
}

model Advisor {
  id          String   @id @default(cuid())
  firmName    String
  teamLead    String
  headshotUrl String?
  email       String
  phone       String
  street      String?
  suburb      String?
  state       String?
  postcode    String?
  country     String   @default("Australia")
  websiteUrl  String?
  description String?
  specialties Json?    @default("[]") // Array of strings
  status      String   @default("active") // active | inactive
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relationships
  companies   Company[]

  @@map("advisors")
}

model Listing {
  id          Int       @id @default(autoincrement())
  slug        String    @unique
  title       String
  description String    @default("")
  price       Int?
  address     String
  suburb      String?
  state       String?
  postcode    String?
  latitude    Float
  longitude   Float
  images      Json?     @default("[]") // Array of URL strings
  additionalSections Json? @default("[]") // Array of AdditionalSection objects
  companyId   String?
  company     Company?  @relation(fields: [companyId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("listings")
}

model SavedListing {
  id        String   @id @default(cuid())
  userId    String   // Simple identifier for the user who saved it
  companyId String   // Reference to the company
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, companyId]) // Prevent duplicate saves
  @@map("saved_listings")
}
